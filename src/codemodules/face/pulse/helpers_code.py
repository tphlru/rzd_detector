vhr_ldmks_list = [
    2,
    3,
    4,
    5,
    6,
    8,
    9,
    10,
    18,
    21,
    32,
    35,
    36,
    43,
    46,
    47,
    48,
    50,
    54,
    58,
    67,
    68,
    69,
    71,
    92,
    93,
    101,
    103,
    104,
    108,
    109,
    116,
    117,
    118,
    123,
    132,
    134,
    135,
    138,
    139,
    142,
    148,
    149,
    150,
    151,
    152,
    182,
    187,
    188,
    193,
    197,
    201,
    205,
    206,
    207,
    210,
    211,
    212,
    216,
    234,
    248,
    251,
    262,
    265,
    266,
    273,
    277,
    278,
    280,
    284,
    288,
    297,
    299,
    322,
    323,
    330,
    332,
    333,
    337,
    338,
    345,
    346,
    361,
    363,
    364,
    367,
    368,
    371,
    377,
    379,
    411,
    412,
    417,
    421,
    425,
    426,
    427,
    430,
    432,
    436,
]


def get_largest_serially(source_list: list, n: int):
    """Получить n наибольших значений в списке в том порядке, в котором они представлены в исходном списке.
    Пример:
    get_largest_serially([34, 12, 45, 7, 23, 56, 89, 1, 2, 3, 4, 5, 6, 7, 8, 9], 5) --> [34, 45, 23, 56, 89]

    Args:
        source_list (list): Исходный список
        n (int): Количество наибольших значений для получения

    Returns:
        list: Список, содержащий n наибольших значений в порядке, в исходном порядке.
    """
    n += 1
    indices = dict(zip(source_list, range(len(source_list))))
    top = sorted(source_list, reverse=True)[:n]
    return [source_list[i] for i in sorted({indices[i] for i in top})]
