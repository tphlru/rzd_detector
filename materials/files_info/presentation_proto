Наш проект "Детектор состояния человека"

Мы хотели создать такую программу, которая позволила бы бесконтактно понять эмоционалное состояние человека и спрогнозировать его поведение и вероятность совершения им противоправных действий.

На российском рынке аналогов нашей разработки ещё нет, а существующие продукты нескольких зарубежных компаний анализируют только мимику лица, в то время как наша программа анализирует ещё и дыхание, частоту пульса, частоту моргания и тон голоса.

Для обучения нейросети мы используем синтетические данные и архитектуру ResNET (1) в качестве основной, и ансамблирование с другими подходами, что позволяет добиться очень высокой точности.

Наличие устройства.

Мы разрабатывали проект для РЖД, а именно использования в местах массового скопления людей - вокзалах. Охрана обественного порядка, предупреждение террористических угроз.

Машинное обучение: ResNet, MTTS-CAN, Ансамблирование подходов, blood-volume pulse (PBV), python, tensorflow, torch, , прототипирование в Jupyter Notebook, mediapipe, CNN (для голоса), VAD, dusha-finetuned HuBERT model (2)

Подходы к анализу и подготовке данных: для предварительной обработки данных - pandas, polars, k-means кластеризация, метод главных компонент (Principal component analysis), аугментация данных

Решения 1. Используемые РЖД:
- камеры видеонаблюдения
Охватывают большие территории, фиксируют события для последующего анализа. Простота установки и использования, не требуют больших финансовых затрат.

Требуют постоянного внимания оператора, работают постфактум.

- Охранники (личный досмотр)
гибкость действий
оценка сложных невербальных признаков поведения
Высокая скорость реагирования

человеческий фактор (предубеждения, стресс)
ограниченность покрытия территории
дороговизна

- Металлоискатели и рентгеновские установки

Решения 2. Простые, представленные на рынке:
- Системы краудсорсинга информации
- Системы распознавания лиц
- Анализ звуковых сигналов (громкие звуки)
- Физиологический мониторинг (носимые устройства)

Решения 3. Инновационные:
- opsis.ai
- imotions.com

-------------------------------------------------------- GUI
Реализация
Исследование: Мы исследовали информацию на тему психологических особенностей поведения преступников, сформировали их оциальный портрет, выявили, установили невербальные и физиологические параметры, определение которых мы могли бы автоматизировать.

Выбор параметров для анализа (определение эмоций по лицу, эмоциональности голоса, физиологический индикатор (пульс, дыхание)).

Выбор методов распознавания каждого из параметров. Нами были исследованы существующие программные методы релизации, изучены научные работы по используемым технологиям.

Определение эмоций по лицу:
Безусловно, лицо является самым ценным источником информации - способно выразить 16 384 эмоции. Мимика, глаза, нос, кожа - всё это можно исследовать.

При решении задачи классификации 7 эмоций (6 базовых и нейтраль) нами был разработан инновационный подход, который позволяет достичь более высокой точности, чем та, что была достигнута другими на тех же обучающих выборках. Для обучения нейрочети нами был использован преимущественно датасет FER-2013 и несколько более мелких. Мы решили использовать выделение ключевых точек лица (landmarks) вместо необработанного изображения, что дало ряд преимуществ:

- Ключевые точки содержат более детальную информацию о мимике и движении лицевых мышц, важных для распознавания эмоций.
- Ключевые точки более инвариантны к изменениям ракурса, освещения и других факторов.
- Ключевые точки представляют более компактные данные, что упрощает архитектуры, тем самым повышая быстродействие системы.

(Фото)

Однако, интерпретируемость таких данных в исходном виде (x, y, z) с точки зрения ML довольно низкая. Мы решили синтезировать из них другие данные - относительные расстояния между всему всеми точками. Мы кратно увеличиваем кол-во данных (в 240 раз больше), однако, используем не все, а лишь самые ценные из них - эти параметры мы выделили, основываясь на кластеризации характеристик плотности кластеров значений (чем плотнее - тем выше определенность) одинаковых классов эмоций и смещении эпицентров кластеров значений у разных классов (более выделенные). Т.К. Взаимная корреляция данных была довольно высокой (более 90%), а корреляция с целевым параметром (класс) низкой (0,2 - 0,3) мы выделили около 2000 из отсортированных лучших значений, что оказалось достаточным для достижения хорошего результата. Выполнена Z-score нормализация (стандартное отклонение от среднего значения)

Мы протестировали несколько архитектур нейросетей.ю чтобы выделит наиллучшую для этой задачи:
- CNN. Сверточные нейронные сети. Хороша работают с изображениями, но плохо с данными со слабовыраженными взаимосвязями, где свертка лишь ухудшает ситуацию.
- Графовые нейронные сети. (GNNs) Протестированы с жестким триангулированными графом landmarks и c выделенными параметрами. Из-за сложности архитектуры, графовые нейронные сети не справляются с графами в которых больше нейскольких десятков вершин. Обучение заняло бы несколько месяцев, а быстродействие было бы низким.
- ResNet. Нейросеть построенная на базе этой архитектуры показала себя лучше всего. Основные причины:

1. Способность к глубокому обучению: ResNet позволяет строить очень глубокие нейронные сети (до сотен слоев), что дает возможность извлекать более сложные и абстрактные признаки из входных данных
2. Благодаря использования прямых соединений между слоями ResNet способен эффективно передавать градиенты в глубокие слои сети, что решает проблему затухания
3. Эффективность при больших объемах данных

Чтобы дополнительно увеличить точность, мы использовали ансамблирование с другими популярными моделями. Гиперпараметры нейросети были оптимизированны с помощью AUTO ML систем.


Слайд качество кода:
Основная часть программы написана на ЯП python.
Используется функциональный подход и Объектно ориентированное программирование (ООП). Весь код строго типизирован, соответсвeет всем стандартам PEP8, является хорошо читаемым :

Максимальная длина строки 120 символов
Функции логически разбиты, не перегружены
Каждая функция содержит DocString

Код оформлен в виде python пакета - это было сделано, чтобы увеличить его универсальность, модульность, упростить и структурировать разработку. Код выложен в репозиторий на github


1 - (Residual Networks): Эти сети используют остаточные связи, что позволяет строить очень глубокие модели без проблемы затухания градиента. ResNet часто применяется для классификации изображений, включая эмоции на лицах. Как работает?


2- Она использует метод кластеризации и предсказания для создания «шумных» меток, обучаясь на основе скрытых сегментов звука. Это позволяет модели выявлять структурные элементы речи HuBERT использует два ключевых метода:

1. **Кластеризация**: Модель группирует похожие звуковые сегменты, создавая так называемые «шумные» метки, чтобы без ручной разметки извлекать скрытую структуру речи.

2. **Masked Prediction (маскированное предсказание)**: Модель учится предсказывать пропущенные (замаскированные) фрагменты аудиосигнала, что позволяет ей лучше распознавать паттерны и смыслы в речи на основе обширных данных.

Эти методы помогают HuBERT эффективно решать задачи генерации, распознавания и сжатия речи.


Градиент - это вектор частных производных функции по ее входным параметрам. Другими словами, градиент показывает, как изменится значение функции при малом изменении ее входов.
